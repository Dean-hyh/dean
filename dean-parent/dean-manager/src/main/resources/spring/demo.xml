<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">
    <description>jms</description>

    <!--<bean id="sslContextFactory" class="cn.epaylinks.gc.gw.fps.connection.SSLContextFactory"></bean>-->
    <!-- mq连接工厂 -->
    <bean id="ibmJmsConnectionFactory" class="com.ibm.mq.jms.MQConnectionFactory">
        <property name="hostName" value="${ibm.mq.host}" />
        <property name="port" value="${ibm.mq.sever.port}" />
        <property name="CCSID" value="${ibm.mq.ccsid}" />
        <property name="queueManager" value="${ibm.mq.sever.manageName}" />
        <property name="channel" value="${ibm.mq.sever.channelName}" />
        <!--<property name="SSLFipsRequired" value="${ssl.fipsRequired}"/>-->
        <!--<property name="SSLPeerName" value="${ssl.server.sslPeerName}"/>-->
        <!-- 设置SSL双向加密通信 -->
        <!--<property name="SSLSocketFactory">
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                &lt;!&ndash; targetObject确定目标Bean，指定调用哪个Bean &ndash;&gt;
                <property name="targetObject" ref="sslContextFactory"></property>
                &lt;!&ndash; targetMethod确定目标方法，指定调用目标Bean的哪个方法 &ndash;&gt;
                <property name="targetMethod" value="getSSLSocketFactory"></property>
            </bean>
        </property>
        <property name="SSLCipherSuite" value="${ssl.cipherSuite}"/>-->
    </bean>
    <!-- 创建连接 -->
    <bean id="connectionFactoryAdapter" class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
        <property name="targetConnectionFactory" ref="ibmJmsConnectionFactory"/>
        <property name="username" value="${ibm.mq.userName}"/>
        <property name="password" value="${ibm.mq.password}"/>
    </bean>
    <!-- 缓存管理mq队列连接工厂 -->
    <bean id="ibmQueueConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="connectionFactoryAdapter"/>
        <property name="sessionCacheSize" value="10"/>
        <property name="reconnectOnException" value="${ibm.reconnection}"/>
    </bean>
    <!-- 接收消息队列-->
    <!-- 监听获取对方发起消息的输入消息队列 ibm.mq.h.req.inQueue-->
    <!-- 监听获取对方回复消息的输入消息队列 ibm.mq.h.ack.inQueue-->
    <bean id="ibmHReqReceiveQueue" class="com.ibm.mq.jms.MQQueue">
        <property name="baseQueueName" value="${ibm.mq.h.req.inQueue}" />
    </bean>
    <bean id="ibmHAckReceiveQueue" class="com.ibm.mq.jms.MQQueue">
        <property name="baseQueueName" value="${ibm.mq.h.ack.inQueue}" />
    </bean>

    <!-- 发送消息队列-->
    <!-- 主动发起消息给对方的输出队列 ibm.mq.h.req.outQueue-->
    <!-- 回复消息给对方的输出队列 ibm.mq.h.ack.outQueue-->
    <bean id="ibmHReqSendQueue" class="com.ibm.mq.jms.MQQueue">
        <property name="baseQueueName" value="${ibm.mq.h.req.outQueue}"/>
    </bean>
    <bean id="ibmHAckSendQueue" class="com.ibm.mq.jms.MQQueue">
        <property name="baseQueueName" value="${ibm.mq.h.ack.outQueue}"/>
    </bean>

    <!-- 接收消息模板 -->
    <bean id="receiveHReqJMSTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="ibmQueueConnectionFactory"/>
        <property name="defaultDestination" ref="ibmHReqReceiveQueue"/>
        <!-- 非pub/sub模型（发布/订阅），即：队列模型 -->
        <property name="pubSubDomain" value="false"/>
    </bean>
    <bean id="receiveHAckJMSTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="ibmQueueConnectionFactory"/>
        <property name="defaultDestination" ref="ibmHAckReceiveQueue"/>
        <property name="pubSubDomain" value="false"/>
    </bean>
    <!-- 发送消息模板 -->
    <bean id="sendHReqJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="ibmQueueConnectionFactory" />
        <property name="defaultDestination" ref="ibmHReqSendQueue" />
        <property name="pubSubDomain" value="false"/>
    </bean>
    <bean id="sendHAckJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="ibmQueueConnectionFactory" />
        <property name="defaultDestination" ref="ibmHAckSendQueue" />
        <property name="pubSubDomain" value="false"/>
    </bean>

    <!-- 消息接收程序,接收多个信道的信息 -->
    <bean id="ibmHReqJmsReceiver" class="cn.mq.transceiver.JMSHReqReceiver">
        <property name="jmsTemplate" ref="receiveHReqJMSTemplate"/>
        <property name="receiveQueue" ref="ibmHReqReceiveQueue"/>
    </bean>
    <bean id="ibmHAckJmsReceiver" class="cn.mq.transceiver.JMSHAckReceiver">
        <property name="jmsTemplate" ref="receiveHAckJMSTemplate"/>
        <property name="receiveQueue" ref="ibmHAckReceiveQueue"/>
    </bean>
    <!-- 消息发送程序 -->
    <bean id="ibmHReqJmsSender" class="cn.mq.transceiver.JMSHReqSender">
        <property name="jmsTemplate" ref="sendHReqJmsTemplate"/>
        <property name="sendQueue" ref="ibmHReqSendQueue"/>
    </bean>
    <bean id="ibmHAckJmsSender" class="cn.mq.transceiver.JMSHAckSender">
        <property name="jmsTemplate" ref="sendHAckJmsTemplate"/>
        <property name="sendQueue" ref="ibmHAckSendQueue"/>
    </bean>
    <!-- DefaultMessageListenerContainer允许指定数量的并发监听线程,可以在允许期间动态调整监听线程的数量 -->
    <bean id="queueContainer1" class="org.springframework.jms.listener.DefaultMessageListenerContainer" >
        <property name="connectionFactory" ref="ibmQueueConnectionFactory" />
        <property name="destination" ref="ibmHReqReceiveQueue"/>
        <property name="pubSubDomain" value="false" />
        <property name="messageListener" ref="ibmHReqJmsReceiver"/>
        <!-- 设置固定的线程数 -->
        <property name="concurrentConsumers" value="${concurrentConsumers}"/>
        <!-- 设置动态的线程数 -->
        <property name="concurrency" value="${concurrency}"/>
        <!-- 设置最大的线程数 -->
        <property name="maxConcurrentConsumers" value="${maxConcurrentConsumers}"/>
    </bean>
    <bean id="queueContainer2" class="org.springframework.jms.listener.DefaultMessageListenerContainer" >
        <property name="connectionFactory" ref="ibmQueueConnectionFactory" />
        <property name="destination" ref="ibmHAckReceiveQueue"/>
        <property name="pubSubDomain" value="false" />
        <property name="messageListener" ref="ibmHAckJmsReceiver"/>
        <!-- 设置固定的线程数 -->
        <property name="concurrentConsumers" value="${concurrentConsumers}"/>
        <!-- 设置动态的线程数 -->
        <property name="concurrency" value="${concurrency}"/>
        <!-- 设置最大的线程数 -->
        <property name="maxConcurrentConsumers" value="${maxConcurrentConsumers}"/>
    </bean>
</beans>